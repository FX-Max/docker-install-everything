input {

  kafka {
    type => "nginx-access-log"
    bootstrap_servers => "kafka:9092"
    client_id => "nginx-access-log"
    group_id => "nginx-access-log"
    auto_offset_reset => "earliest"
    consumer_threads => 1
    decorate_events => false
    topics => ["nginx.access.log"]
  }

  kafka {
    type => "nginx-error-log"
    bootstrap_servers => "kafka:9092"
    client_id => "nginx-error-log"
    group_id => "nginx-error-log"
    auto_offset_reset => "earliest"
    consumer_threads => 1
    decorate_events => false
    topics => ["nginx.error.log"]
  }
}

filter {
  json {
    source => "message"
  }

  if [type] == "nginx-access-log" {
    mutate {
      gsub => ["message","password=[^\&]+","password=******"]
    }
    grok {
      match => {
        "message" => '(?m)(?<remote_addr>(\d+\.){3}\d{1,3})\s-\s(?<remote_user>([^\s])+)\s\[(?<time_local>.+)\]\s"(?<request>.+?)"\s(?<status>\d{3})\s(?<body_bytes_sent>\d+)\s"(?<http_referer>.+?)"\s"(?<http_user_agent>.+?)"\s(?<request_time>\d+\.\d+)\s(?<upstream_response_time>(\d+\.\d+|-))\s(?<host_name>[^\s]+)\s(?<request_body>.+)'
      }
    }
    mutate {
      remove_field => [ "message" ]
    }
  }

  if [type] == "nginx-error-log" {
    grok {
      match => {
        "message" => '(?m)(?<time_local>\d{4}\/\d{2}\/\d{2}\s(\d{2}:){2}\d{2})\s\[(?<level>\w+)\]\s(?<msg>[^,]+)(,\sclient:\s(?<client>(\d{1,3}\.){3}\d{1,3}))?(,\sserver:\s(?<server>[^,]+))?(,\srequest:\s"(?<request>.+?)")?(,\supstream:\s"(?<upstream>.+?)")?(,\shost:\s"(?<host_name>.+?)")?(,\sreferrer:\s"(?<referrer>.+))?'
      }
    }
    mutate {
      remove_field => [ "message" ]
    }
    mutate {
      rename => ["msg", "message" ]
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "%{[type]}-%{+YYYY.MM.dd}"
  }
}
